--- a/chrome/browser/external_protocol/external_protocol_handler.cc
+++ b/chrome/browser/external_protocol/external_protocol_handler.cc
@@ -215,15 +215,15 @@
   // On ChromeOS, Click to Call is integrated into the external protocol dialog.
 #if !BUILDFLAG(IS_ANDROID) && !BUILDFLAG(IS_FUCHSIA) && \
     !BUILDFLAG(IS_CHROMEOS_ASH)
-  if (web_contents && ShouldOfferClickToCallForURL(
-                          web_contents->GetBrowserContext(), escaped_url)) {
+  //if (web_contents && ShouldOfferClickToCallForURL(
+  //                        web_contents->GetBrowserContext(), escaped_url)) {
     // Handle tel links by opening the Click to Call dialog. This will call back
     // into LaunchUrlWithoutSecurityCheck if the user selects a system handler.
-    ClickToCallUiController::ShowDialog(web_contents, initiating_origin,
-                                        std::move(initiator_document),
-                                        escaped_url, chrome_is_default_handler);
-    return;
-  }
+  //  ClickToCallUiController::ShowDialog(web_contents, initiating_origin,
+  //                                      std::move(initiator_document),
+  //                                      escaped_url, chrome_is_default_handler);
+  //  return;
+  //}
 #endif
 
   if (chrome_is_default_handler) {

--- a/chrome/browser/renderer_context_menu/render_view_context_menu.cc
+++ b/chrome/browser/renderer_context_menu/render_view_context_menu.cc
@@ -1413,7 +1413,7 @@
     if (params_.has_image_contents)
       AppendQRCodeGeneratorItem(/*for_image=*/true, /*draw_icon=*/true);
 
-#if !BUILDFLAG(IS_FUCHSIA)
+#if (0)
     AppendClickToCallItem();
 #endif
 
@@ -2041,7 +2041,7 @@
   int items_before_sharing = menu_model_.GetItemCount();
   bool starting_separator_added = items_before_sharing > items_initial;
 
-#if !BUILDFLAG(IS_FUCHSIA)
+#if (0)
   AppendClickToCallItem();
 #endif
   AppendSharedClipboardItem();
@@ -2055,7 +2055,7 @@
     menu_model_.RemoveItemAt(items_initial);
 }
 
-#if !BUILDFLAG(IS_FUCHSIA)
+#if (0)
 void RenderViewContextMenu::AppendClickToCallItem() {
   SharingClickToCallEntryPoint entry_point;
   absl::optional<std::string> phone_number;
