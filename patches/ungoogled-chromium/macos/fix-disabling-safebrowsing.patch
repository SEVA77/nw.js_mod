# Fix GN safe_browsing and building with safebrowsing disabled on macOS

--- a/chrome/browser/extensions/BUILD.gn
+++ b/chrome/browser/extensions/BUILD.gn
@@ -762,8 +759,6 @@ static_library("extensions") {
     "//chrome/common",
     "//chrome/common/extensions/api",
     "//components/omnibox/browser",
-    "//components/safe_browsing/core/browser/db:util",
-    "//components/safe_browsing/core/common/proto:csd_proto",
     "//components/signin/core/browser",
     "//components/translate/content/browser",
     "//content/public/browser",
@@ -888,12 +882,6 @@ static_library("extensions") {
     "//components/proxy_config",
     "//components/reading_list/core",
     "//components/resources",
-    "//components/safe_browsing:buildflags",
-    "//components/safe_browsing/content/browser/web_ui:web_ui",
-    "//components/safe_browsing/core/browser/db:database_manager",
-    "//components/safe_browsing/core/common",
-    "//components/safe_browsing/core/common:safe_browsing_prefs",
-    "//components/safe_browsing/core/common/proto:csd_proto",
     "//components/search_engines",
     "//components/services/app_service",
     "//components/services/patch/content",
--- a/chrome/browser/ui/BUILD.gn
+++ b/chrome/browser/ui/BUILD.gn
@@ -405,7 +405,6 @@ static_library("ui") {
   public_deps = [
     "//components/dom_distiller/core",
     "//components/paint_preview/buildflags",
-    "//components/safe_browsing:buildflags",
     "//components/sync",
     "//components/sync_user_events",
     "//components/translate/content/browser",
@@ -596,16 +594,7 @@ static_library("ui") {
     "//components/reading_list/features:flags",
     "//components/renderer_context_menu",
     "//components/resources",
-    "//components/safe_browsing/content/browser",
-    #"//components/safe_browsing/content/browser:client_side_detection",
-    "//components/safe_browsing/content/browser/password_protection",
     "//components/safe_browsing/content/browser/web_ui",
-    "//components/safe_browsing/core/browser/db:database_manager",
-    "//components/safe_browsing/core/browser/db:util",
-    "//components/safe_browsing/core/browser/password_protection:password_protection_metrics_util",
-    "//components/safe_browsing/core/common",
-    "//components/safe_browsing/core/common:safe_browsing_prefs",
-    "//components/safe_browsing/core/common/proto:csd_proto",
     "//components/schema_org/common:improved_mojom",
     "//components/search",
     "//components/search_engines",
@@ -5374,26 +5362,6 @@ static_library("ui") {
     }
   }
 
-  if (safe_browsing_mode > 0) {
-    deps += [
-      "//components/safe_browsing/content/browser:safe_browsing_blocking_page",
-    ]
-  }
-
-  if (safe_browsing_mode == 1) {
-    sources += [
-      "webui/reset_password/reset_password_ui.cc",
-      "webui/reset_password/reset_password_ui.h",
-    ]
-
-    deps += [
-      "//chrome/browser/ui/webui/reset_password:mojo_bindings",
-      "//chrome/common/safe_browsing:proto",
-      "//components/safe_browsing/core/browser/password_protection:password_protection_metrics_util",
-      "//components/safe_browsing/core/common/proto:csd_proto",
-    ]
-  }
-
   if (use_dbus) {
     deps += [ "//dbus" ]
   }
--- a/chrome/browser/safe_browsing/download_protection/download_protection_service.cc
+++ b/chrome/browser/safe_browsing/download_protection/download_protection_service.cc
@@ -453,8 +453,12 @@ void DownloadProtectionService::ShowDeta
   Profile* profile = Profile::FromBrowserContext(
       content::DownloadItemUtils::GetBrowserContext(item));
   if (profile &&
+#if BUILDFLAG(FULL_SAFE_BROWSING)
       AdvancedProtectionStatusManagerFactory::GetForProfile(profile)
           ->IsUnderAdvancedProtection() &&
+#else
+      false &&
+#endif
       item->GetDangerType() ==
           download::DOWNLOAD_DANGER_TYPE_UNCOMMON_CONTENT) {
     learn_more_url = GURL(chrome::kAdvancedProtectionDownloadLearnMoreURL);
--- a/chrome/browser/download/notification/download_item_notification.cc
+++ b/chrome/browser/download/notification/download_item_notification.cc
@@ -994,9 +994,13 @@ std::u16string DownloadItemNotification:
     }
     case download::DOWNLOAD_DANGER_TYPE_UNCOMMON_CONTENT: {
       bool requests_ap_verdicts =
+#if 0
           safe_browsing::AdvancedProtectionStatusManagerFactory::GetForProfile(
               profile())
               ->IsUnderAdvancedProtection();
+#else
+          false;
+#endif
       return l10n_util::GetStringFUTF16(
           requests_ap_verdicts
               ? IDS_PROMPT_UNCOMMON_DOWNLOAD_CONTENT_IN_ADVANCED_PROTECTION
--- a/chrome/browser/ui/webui/downloads/downloads_ui.cc
+++ b/chrome/browser/ui/webui/downloads/downloads_ui.cc
@@ -68,10 +69,12 @@ content::WebUIDataSource* CreateAndAddDo
       source, base::make_span(kDownloadsResources, kDownloadsResourcesSize),
       IDR_DOWNLOADS_DOWNLOADS_HTML);
 
-  bool requests_ap_verdicts =
-      safe_browsing::AdvancedProtectionStatusManagerFactory::GetForProfile(
+  bool requests_ap_verdicts = false;
+#if 0
+      requests_ap_verdicts = safe_browsing::AdvancedProtectionStatusManagerFactory::GetForProfile(
           profile)
           ->IsUnderAdvancedProtection();
+#endif
   source->AddBoolean("requestsApVerdicts", requests_ap_verdicts);
 
   static constexpr webui::LocalizedString kStrings[] = {
--- a/chrome/browser/ui/views/download/download_danger_prompt_views.cc
+++ b/chrome/browser/ui/views/download/download_danger_prompt_views.cc
@@ -202,17 +202,18 @@ std::u16string DownloadDangerPromptViews
             download_->GetFileNameToReportUser().LossyDisplayName());
       }
       case download::DOWNLOAD_DANGER_TYPE_UNCOMMON_CONTENT: {
+#if 0
         if (safe_browsing::AdvancedProtectionStatusManagerFactory::
                 GetForProfile(profile_)
                     ->IsUnderAdvancedProtection()) {
           return l10n_util::GetStringFUTF16(
               IDS_PROMPT_UNCOMMON_DOWNLOAD_CONTENT_IN_ADVANCED_PROTECTION,
               download_->GetFileNameToReportUser().LossyDisplayName());
-        } else {
+        } else
+#endif
           return l10n_util::GetStringFUTF16(
               IDS_PROMPT_UNCOMMON_DOWNLOAD_CONTENT,
               download_->GetFileNameToReportUser().LossyDisplayName());
-        }
       }
       case download::DOWNLOAD_DANGER_TYPE_POTENTIALLY_UNWANTED: {
         return l10n_util::GetStringFUTF16(
--- a/chrome/browser/ui/views/download/download_item_view.cc
+++ b/chrome/browser/ui/views/download/download_item_view.cc
@@ -1018,11 +1018,13 @@ ui::ImageModel DownloadItemView::GetIcon
 
   switch (danger_type) {
     case download::DOWNLOAD_DANGER_TYPE_UNCOMMON_CONTENT:
+#if 0
       return safe_browsing::AdvancedProtectionStatusManagerFactory::
                      GetForProfile(model_->profile())
                          ->IsUnderAdvancedProtection()
                  ? kWarning
                  : kError;
+#endif
     case download::DOWNLOAD_DANGER_TYPE_DANGEROUS_URL:
     case download::DOWNLOAD_DANGER_TYPE_DANGEROUS_CONTENT:
     case download::DOWNLOAD_DANGER_TYPE_DANGEROUS_HOST:
