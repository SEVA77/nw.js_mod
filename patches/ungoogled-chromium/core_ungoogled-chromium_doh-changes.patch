--- a/chrome/common/chrome_features.cc
+++ b/chrome/common/chrome_features.cc
@@ -331,12 +331,7 @@ const base::Feature kChromeAppsDeprecati
 // Enable DNS over HTTPS (DoH).
 const base::Feature kDnsOverHttps {
   "DnsOverHttps",
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_MAC) || \
-    BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_LINUX)
-      base::FEATURE_ENABLED_BY_DEFAULT
-#else
       base::FEATURE_DISABLED_BY_DEFAULT
-#endif
 };
 
 // Set whether fallback to insecure DNS is allowed by default. This setting may
--- a/net/dns/public/doh_provider_entry.cc
+++ b/net/dns/public/doh_provider_entry.cc
@@ -149,30 +149,6 @@ const DohProviderEntry::List& DohProvide
           /*display_globally=*/false, /*display_countries=*/{"EE", "DE"},
           LoggingLevel::kNormal),
       new DohProviderEntry(
-          "Google",
-          base::Feature{"DohProviderGoogle", base::FEATURE_ENABLED_BY_DEFAULT},
-          DohProviderIdForHistogram::kGoogle,
-          {"8.8.8.8", "8.8.4.4", "2001:4860:4860::8888",
-           "2001:4860:4860::8844"},
-          /*dns_over_tls_hostnames=*/
-          {"dns.google", "dns.google.com", "8888.google"},
-          "https://dns.google/dns-query{?dns}",
-          /*ui_name=*/"Google (Public DNS)",
-          "https://developers.google.com/speed/public-dns/"
-          /*privacy_policy=*/"privacy",
-          /*display_globally=*/true, /*display_countries=*/{},
-          LoggingLevel::kExtra),
-      new DohProviderEntry("GoogleDns64",
-                           base::Feature{"DohProviderGoogleDns64",
-                                         base::FEATURE_ENABLED_BY_DEFAULT},
-                           /*provider_id_for_histogram=*/absl::nullopt,
-                           {"2001:4860:4860::64", "2001:4860:4860::6464"},
-                           /*dns_over_tls_hostnames=*/{"dns64.dns.google"},
-                           "https://dns64.dns.google/dns-query{?dns}",
-                           /*ui_name=*/"", /*privacy_policy=*/"",
-                           /*display_globally=*/false,
-                           /*display_countries=*/{}, LoggingLevel::kNormal),
-      new DohProviderEntry(
           "Iij",
           base::Feature{"DohProviderIij", base::FEATURE_ENABLED_BY_DEFAULT},
           DohProviderIdForHistogram::kIij, /*ip_strs=*/{},
--- a/services/network/public/cpp/features.cc
+++ b/services/network/public/cpp/features.cc
@@ -92,12 +92,7 @@ const base::Feature kSplitAuthCacheByNet
 // Enable usage of hardcoded DoH upgrade mapping for use in automatic mode.
 const base::Feature kDnsOverHttpsUpgrade {
   "DnsOverHttpsUpgrade",
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_MAC) || \
-    BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_LINUX)
-      base::FEATURE_ENABLED_BY_DEFAULT
-#else
       base::FEATURE_DISABLED_BY_DEFAULT
-#endif
 };
 
 // If this feature is enabled, the mDNS responder service responds to queries
